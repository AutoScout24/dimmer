# This is the main configuration file for the application.
# ~~~~~
play.crypto.secret = "notused"
play.modules.enabled += "com.kenshoo.play.metrics.PlayModule"
play.modules.enabled += "toguru.app.ToguruModule"
play.http.filters      = "toguru.filters.Filters"
play.http.errorHandler = "toguru.app.ErrorHandler"

# The application languages
# ~~~~~
play.i18n.langs = [ "en" ]
actorTimeout = 500ms

akka {
  stdout-loglevel = off // defaults to WARNING can be disabled with off. The stdout-loglevel is only in effect during system startup and shutdown
  log-dead-letters-during-shutdown = on
  loglevel = info
  log-dead-letters = on
  log-config-on-start = off // Log the complete configuration at INFO level when the actor system is started

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    serialize-messages = off // when on, the akka framework will determine whether or not messages can be serialized, else the plugin
    warn-about-java-serializer-usage = on

    serializers {
      toggle-events-protobuf = "toguru.toggles.ToggleEventProtoBufSerializer"
    }

    serialization-bindings {
      "toguru.toggles.ToggleEvent" = toggle-events-protobuf
    }

    debug {
      receive = on // log all messages sent to an actor if that actors receive method is a LoggingReceive
      autoreceive = off // log all special messages like Kill, PoisoffPill etc sent to all actors
      lifecycle = off // log all actor lifecycle events of all actors
      fsm = off // enable logging of all events, transitioffs and timers of FSM Actors that extend LoggingFSM
      event-stream = off // enable logging of subscriptions (subscribe/unsubscribe) on the ActorSystem.eventStream
    }
  }

  persistence {
    journal {
      plugin = "jdbc-journal"
      auto-start-journals = ["jdbc-journal"]
    }
    snapshot-store {
      plugin = "jdbc-snapshot-store"
      auto-start-snapshot-stores = ["jdbc-snapshot-store"]
    }

    circuit-breaker {
      max-failures = 10
      call-timeout = 40s
      reset-timeout = 60s
    }
  }

  extensions = []
}

jdbc-journal {
  slick = ${slick}
  slick.db.numThreads = 8
  slick.db.maxConnections = 5
  slick.db.minConnections = 1

  recovery-event-timeout = 60m

  event-adapters {
    toggle-tagging = "toguru.toggles.ToggleEventTagging"
  }
  event-adapter-bindings {
    "toguru.toggles.ToggleEvent" = toggle-tagging
  }
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  slick = ${slick}
  slick.db.numThreads = 8
  slick.db.maxConnections = 5
  slick.db.minConnections = 1
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  refresh-interval = "100ms"

  max-buffer-size = "500"

  batch-size = "250"

  slick = ${slick}
  slick.db.numThreads = 8
  slick.db.maxConnections = 5
  slick.db.minConnections = 1
}

slick {
  driver = "slick.driver.PostgresDriver$"
  db {
    host = "postgres"
    host = ${?POSTGRES_HOST}
    port = 5432
    port = ${?POSTGRES_PORT}
    url = "jdbc:postgresql://"${slick.db.host}":"${slick.db.port}"/toguru?user="${slick.db.user}"&reWriteBatchedInserts=true"
    user = "postgres"
    user = ${?POSTGRES_USER}
    password = ""
    password = ${?POSTGRES_PASSWORD}
    driver = "org.postgresql.Driver"
    connectionTestQuery = "SELECT 1" // postgres doesnt support connection timeout
    maxConnections = 2
    minConnections = 1
  }
}
